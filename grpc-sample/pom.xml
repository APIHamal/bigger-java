<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.lizhengpeng.bigger.java</groupId>
        <artifactId>bigger-java</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>grpc-sample</artifactId>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 配置protobuf的版本 -->
        <protobuf.version>3.25.1</protobuf.version>
        <!-- 配置grpc的版本 如果不需要grpc 删除这个grpc.version即可 -->
        <grpc.version>1.60.0</grpc.version>
    </properties>

    <dependencies>
        <!-- Protobuf 核心库（使用protobuf时必须依赖） -->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${protobuf.version}</version>
        </dependency>
        <!-- gRPC 依赖（如果不使用grpc可以去除） -->
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-core</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-stub</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-protobuf</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-netty-shaded</artifactId>
            <version>${grpc.version}</version>
        </dependency>
        <dependency>
            <groupId>io.grpc</groupId>
            <artifactId>grpc-services</artifactId> <!-- 包含 ServerServiceDefinition -->
            <version>${grpc.version}</version>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <!-- 操作系统检测插件（必须） -->
            <!-- protobuf-maven-plugin会根据当前的[操作系统]自动去下载对应平台的[protoc]编译器 -->
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.7.1</version>
            </extension>
        </extensions>
        <plugins>
            <!-- Protobuf 编译插件 -->
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <!-- 配置 Protobuf 编译器（用来编译proto文件生成message） -->
                    <protocArtifact>
                        com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
                    </protocArtifact>
                    <!-- Proto 文件路径 -->
                    <protoSourceRoot>${project.basedir}/src/main/resources/proto</protoSourceRoot>
                    <!-- 输出目录配置 -->
                    <outputDirectory>${project.basedir}/src/main/java</outputDirectory>
                    <!-- 是否清空输出目录（如果是输出到src/main/java则不能设置为true否则会清空所有的源码） -->
                    <clearOutputDirectory>false</clearOutputDirectory>
                    <!-- 配置 gRPC 代码生成插件 -->
                    <!-- 如果不需要生成grpc相关代码可以去除这里的插件配置 删除pluginId和pluginArtifact即可 -->
                    <pluginId>grpc-java</pluginId>
                    <pluginArtifact>
                        io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
                    </pluginArtifact>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <!-- 编译proto文件 -->
                            <goal>compile</goal>
                            <!-- 生成 gRPC 服务类 -->
                            <!-- 如果不需要生成grpc相关类 删除compile-custom这个阶段即可 -->
                            <goal>compile-custom</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>